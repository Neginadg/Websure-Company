{"version":3,"file":"static/js/566.cb394fd5.chunk.js","mappings":"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","sources":["components/ContentBlock/styles.ts","components/ContentBlock/index.tsx"],"sourcesContent":["import { Row } from \"antd\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ContentSection = styled(\"section\")`\r\n  position: relative;\r\n  padding: 10rem 0 8rem;\r\n\r\n  @media only screen and (max-width: 1024px) {\r\n    padding: 4rem 0 4rem;\r\n  }\r\n`;\r\n\r\nexport const Content = styled(\"p\")`\r\n  margin: 1.5rem 0 2rem 0;\r\n`;\r\n\r\nexport const StyledRow = styled(Row)`\r\n  flex-direction: ${({ direction }: { direction: string }) =>\r\n    direction === \"left\" ? \"row\" : \"row-reverse\"};\r\n`;\r\n\r\nexport const ContentWrapper = styled(\"div\")`\r\n  position: relative;\r\n  max-width: 540px;\r\n\r\n  @media only screen and (max-width: 575px) {\r\n    padding-top: 4rem;\r\n  }\r\n`;\r\n\r\nexport const ServiceWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n`;\r\n\r\nexport const MinTitle = styled(\"h6\")`\r\n  font-size: 15px;\r\n  line-height: 1rem;\r\n  padding: 0.5rem 0;\r\n  text-transform: uppercase;\r\n  color: #000;\r\n  font-family: \"Motiva Sans Light\", sans-serif;\r\n`;\r\n\r\nexport const MinPara = styled(\"p\")`\r\n  font-size: 13px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled(\"div\")`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  max-width: 100%;\r\n\r\n  @media screen and (min-width: 1024px) {\r\n    max-width: 80%;\r\n  }\r\n\r\n  button:last-child {\r\n    // margin-left: 20px;\r\n  }\r\n`;\r\n","import { Row, Col } from \"antd\";\r\nimport { Fade } from \"react-awesome-reveal\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ContentBlockProps } from \"./types\";\r\nimport { Button } from \"../../common/Button\";\r\nimport { SvgIcon } from \"../../common/SvgIcon\";\r\nimport {\r\n  ContentSection,\r\n  Content,\r\n  ContentWrapper,\r\n  ServiceWrapper,\r\n  MinTitle,\r\n  MinPara,\r\n  StyledRow,\r\n  ButtonWrapper,\r\n} from \"./styles\";\r\n\r\nconst ContentBlock = ({\r\n  icon,\r\n  title,\r\n  content,\r\n  section,\r\n  button,\r\n  buttonWidth,\r\n  navigateTo,\r\n  t,\r\n  id,\r\n  direction,\r\n}: ContentBlockProps) => {\r\n  const history = useHistory();\r\n\r\n  const navigateToPage = () => {\r\n    history.push(navigateTo ?? \"/\");\r\n  };\r\n\r\n  return (\r\n    <ContentSection>\r\n      <Fade direction={direction} triggerOnce>\r\n        <StyledRow\r\n          justify=\"space-between\"\r\n          align=\"middle\"\r\n          id={id}\r\n          direction={direction}\r\n        >\r\n          <Col lg={11} md={11} sm={12} xs={24}>\r\n            <SvgIcon src={icon} width=\"100%\" height=\"100%\" />\r\n          </Col>\r\n          <Col lg={11} md={11} sm={11} xs={24}>\r\n            {\" \"}\r\n            <ContentWrapper>\r\n              <h6>{t(title)}</h6>\r\n              <Content>\r\n                {t(content)\r\n                  .split(\"\\n\")\r\n                  .map((line, index) => (\r\n                    <div key={index}>{line}</div>\r\n                  ))}\r\n              </Content>\r\n              {direction === \"right\" ? (\r\n                <ButtonWrapper>\r\n                  {typeof button === \"object\" &&\r\n                    button.map(\r\n                      (\r\n                        item: {\r\n                          color?: string;\r\n                          title: string;\r\n                        },\r\n                        id: number\r\n                      ) => {\r\n                        return (\r\n                          <Button\r\n                            width={buttonWidth || \"100%\"}\r\n                            key={id}\r\n                            color={item.color}\r\n                            onClick={navigateToPage}\r\n                          >\r\n                            {t(item.title)}\r\n                          </Button>\r\n                        );\r\n                      }\r\n                    )}\r\n                </ButtonWrapper>\r\n              ) : (\r\n                <ServiceWrapper>\r\n                  <Row justify=\"space-between\">\r\n                    {typeof section === \"object\" &&\r\n                      section.map(\r\n                        (\r\n                          item: {\r\n                            title: string;\r\n                            content: string;\r\n                            icon: string;\r\n                          },\r\n                          id: number\r\n                        ) => {\r\n                          return (\r\n                            <Col key={id} span={11}>\r\n                              <SvgIcon\r\n                                src={item.icon}\r\n                                width=\"60px\"\r\n                                height=\"60px\"\r\n                              />\r\n                              <MinTitle>{t(item.title)}</MinTitle>\r\n                              <MinPara>{t(item.content)}</MinPara>\r\n                            </Col>\r\n                          );\r\n                        }\r\n                      )}\r\n                  </Row>\r\n                </ServiceWrapper>\r\n              )}\r\n            </ContentWrapper>\r\n          </Col>\r\n        </StyledRow>\r\n      </Fade>\r\n    </ContentSection>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(ContentBlock);\r\n"],"names":["ContentSection","styled","_templateObject","_taggedTemplateLiteral","Content","_templateObject2","StyledRow","Row","_templateObject3","_ref","direction","ContentWrapper","_templateObject4","ServiceWrapper","_templateObject5","MinTitle","_templateObject6","MinPara","_templateObject7","ButtonWrapper","_templateObject8","withTranslation","icon","title","content","section","button","buttonWidth","navigateTo","t","id","history","useHistory","navigateToPage","push","_jsx","children","Fade","triggerOnce","_jsxs","justify","align","Col","lg","md","sm","xs","SvgIcon","src","width","height","split","map","line","index","item","Button","color","onClick","span"],"sourceRoot":""}